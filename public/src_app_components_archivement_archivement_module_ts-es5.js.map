{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_6__","ArchivementComponent","archivementService","router","authService","dialog","url","slice","length","loadPageContent","split","path","getIdForPath","subscribe","id","getContent","result","loadContent","categorys","elements","undefined","items","imageContent","category","push","front","_id","name","image","leftClick","navigate","bind","item","rightClick","openSettings","canView","isInEditing","event","content","popupMenu","fields","openMenu","selectors","viewQuery","src_app_shared_popup_menu_popup_menu_component__WEBPACK_IMPORTED_MODULE_0__","_r1","_r3","ArchivementModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_8__","_angular_material_button__WEBPACK_IMPORTED_MODULE_9__","src_app_shared_dialog_form_dialog_form_module__WEBPACK_IMPORTED_MODULE_2__","_layout_loading_loading_module__WEBPACK_IMPORTED_MODULE_0__","src_app_shared_image_view_image_view_module__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_content_header_content_header_module__WEBPACK_IMPORTED_MODULE_4__","src_app_shared_popup_menu_popup_menu_module__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_10__","component","_archivement_component__WEBPACK_IMPORTED_MODULE_1__","declarations","imports","ArchivementService","httpClient","post","_api_api_service__WEBPACK_IMPORTED_MODULE_0__","ROUTE_ELEMENT","options","ROUTE_CATEGORY","parentId","Object","_parentId","categoryId","element","_categoryId","elementId","_content_service__WEBPACK_IMPORTED_MODULE_1__","t","factory","providedIn"],"sources":["webpack:///src/app/components/archivement/archivement.component.html","webpack:///src/app/components/archivement/archivement.component.ts","webpack:///src/app/components/archivement/archivement.module.ts","webpack:///src/app/service/content/impl/archivement.service.ts"],"sourcesContent":["<div *ngIf='imageContent; then loadedTemplate; else loadingTemplate'></div>\n<ng-template #loadedTemplate>\n    <app-content-header title=\"Archivements\"></app-content-header>\n    <app-image-view [content]=\"this.imageContent\"></app-image-view>\n    <app-popup-menu></app-popup-menu>\n</ng-template>\n\n<ng-template #loadingTemplate>\n    <app-loading></app-loading>\n</ng-template>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth/auth.service';\nimport { Archivement, ArchivementCategory, ArchivementService } from 'src/app/service/content/impl/archivement.service';\nimport { ImageViewContent } from 'src/app/shared/image-view/image-view.component';\nimport { PopupMenuComponent } from 'src/app/shared/popup-menu/popup-menu.component';\n\n@Component({\n  selector: 'app-archivement',\n  templateUrl: './archivement.component.html',\n  styleUrls: ['./archivement.component.css']\n})\nexport class ArchivementComponent implements OnInit {\n\n  imageContent: ImageViewContent[] = [];\n\n  @ViewChild(PopupMenuComponent) popupMenu: PopupMenuComponent;\n\n  constructor(\n    private archivementService: ArchivementService,\n    private router: Router,\n    public authService: AuthService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    let url = this.router.url;\n    url = url.slice(6, url.length);\n    this.loadPageContent(url.length > 0 ? url.split('/') : []);\n  }\n\n  loadPageContent(path: string[]) {\n    if (path.length > 0) {\n      this.archivementService.getIdForPath(path).subscribe(id => {\n        if (id) {\n          this.archivementService.getContent(id.id).subscribe(result => {\n            if (result) {\n              this.loadContent(result.categorys, result.elements);\n            }\n          });\n        }\n      });\n    } else {\n      this.archivementService.getContent(undefined).subscribe(result => {\n        if (result) {\n          this.loadContent(result.categorys, result.elements);\n        }\n      });\n    }\n  }\n\n  loadContent(categorys: ArchivementCategory[], items: Archivement[]) {\n    const imageContent: ImageViewContent[] = [];\n    if (categorys) {\n      for (const category of categorys) {\n        imageContent.push({\n          front: {\n            id: category._id,\n            name: category.name,\n            image: category.image,\n            leftClick: (() => this.router.navigate([`${this.router.url}/${category.name}`])).bind(this)\n          }\n        });\n      }\n    }\n\n    if (items) {\n      for (const item of items) {\n        imageContent.push({\n          front: {\n            id: item._id,\n            name: item.name,\n            image: item.image,\n            rightClick: this.openSettings.bind(this)\n          }\n        });\n      }\n    }\n\n    imageContent.push({\n      front: {\n        name: 'Create',\n        image: 'https://cv.wuffy.eu/new/images/event.png',\n        canView: this.authService.isInEditing.bind(this)\n      }\n    });\n\n    this.imageContent = imageContent;\n  }\n\n  openSettings(event: MouseEvent, content: ImageViewContent) {\n    if (!this.authService.isInEditing()) {\n      return false;\n    }\n\n    this.popupMenu.fields = [{\n      name: 'Update',/* \n      leftClick: ((event2) => this.openUpdateDialog(event2, content)).bind(this) */\n    },\n    {\n      name: 'Delete',/* \n      leftClick: ((event2) => this.openDeleteDialog(event2, content)).bind(this) */\n    }];\n    this.popupMenu.openMenu(event);\n    return true;\n  }\n\n  /*   openCreateDialog(): boolean {\n      if (!this.authService.isInEditing()) {\n        return false;\n      }\n  \n      const dialog = this.dialog.open(DialogFormComponent);\n      const instance = dialog.componentInstance;\n      instance.submit = () => {\n        this.archivementService.createArchivement(instance.getValue('name'), instance.getValue('description'), instance.getValue('image'), (callback) => {\n          if (callback.success) {\n            dialog.close();\n          } else {\n            instance.error = callback.errors.length > 0 ? callback.errors[0].msg : 'Unknown error';\n          }\n        });\n      }\n  \n      instance.title = \"Create event\";\n      instance.submitName = \"Create\";\n      instance.fields = [{\n        id: 'name',\n        name: 'Name'\n      },\n      {\n        id: 'description',\n        name: 'Description'\n      },\n      {\n        id: 'image',\n        name: 'Image'\n      }];\n      return true;\n    }\n  \n    openUpdateDialog(event: MouseEvent, content: ImageViewContent) {\n      const dialog = this.dialog.open(DialogFormComponent);\n      const instance = dialog.componentInstance;\n      instance.submit = () => {\n        this.archivementService.updateArchivement(content.id, (callback) => {\n          if (callback.success) {\n            dialog.close();\n          } else {\n            instance.error = callback.errors.length > 0 ? callback.errors[0].msg : 'Unknown error';\n          }\n        }, instance.getValue('name'), instance.getValue('description'), instance.getValue('image'));\n      }\n  \n      instance.title = 'Update archivement';\n      instance.submitName = 'Update';\n      this.archivementService.getArchivementById(content.id).subscribe(archivement => {\n        instance.fields = [{\n          id: 'name',\n          name: 'Name',\n          value: archivement.name\n        },\n        {\n          id: 'description',\n          name: 'Description',\n          value: archivement.description\n        },\n        {\n          id: 'image',\n          name: 'Image',\n          value: archivement.image\n        }];\n      });\n    }\n  \n    openDeleteDialog(event: MouseEvent, content: ImageViewContent) {\n      const dialog = this.dialog.open(DialogFormComponent);\n      const instance = dialog.componentInstance;\n  \n      instance.title = instance.submitName = \"Delete\";\n      instance.submit = () => {\n        this.archivementService.deleteArchivement(content.id, (callback) => {\n          if (callback.success) {\n            dialog.close();\n          } else {\n            instance.error = callback.errors.length > 0 ? callback.errors[0].msg : 'Unknown error';\n          }\n        });\n      }\n    } */\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingModule } from '../layout/loading/loading.module';\nimport { RouterModule } from '@angular/router';\nimport { ArchivementComponent } from './archivement.component';\nimport { DialogFormModule } from 'src/app/shared/dialog-form/dialog-form.module';\nimport { ImageViewModule } from 'src/app/shared/image-view/image-view.module';\nimport { ContentHeaderModule } from 'src/app/shared/content-header/content-header.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PopupMenuModule } from 'src/app/shared/popup-menu/popup-menu.module';\n\n\n\n@NgModule({\n  declarations: [ArchivementComponent],\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatButtonModule,\n    DialogFormModule,\n    LoadingModule,\n    ImageViewModule,\n    ContentHeaderModule,\n    PopupMenuModule,\n    LoadingModule,\n    ImageViewModule,\n    ContentHeaderModule,\n    PopupMenuModule,\n\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ArchivementComponent\n      }\n    ])\n  ]\n})\nexport class ArchivementModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ApiService } from \"../../api/api.service\";\r\nimport { ContentService, ICategory, IElement, Response, SearchElementOptions } from \"../content.service\";\r\n\r\nexport interface ArchivementCategory extends ICategory {\r\n\tname: string,\r\n\timage: string,\r\n\tdescription: string\r\n\tkeywords: string[]\r\n}\r\n\r\nexport interface Archivement extends IElement {\r\n\tname: string,\r\n\timage: string,\r\n\tvideo: string,\r\n\tdescription: string,\r\n\tchecklist: {\r\n\t\t\tmodel: string,\r\n\t\t\tname: string,\r\n\t\t\tdescription: string,\r\n\t\t\tvalue: [string]\r\n\t}[],\r\n\tkeywords: string[]\r\n}\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport abstract class ArchivementService extends ContentService<ArchivementCategory, Archivement> {\r\n\r\n\tpublic static readonly ROUTE_ELEMENT = \"archivement\";\r\n\tpublic static readonly ROUTE_CATEGORY = \"archivement/category\";\r\n\r\n\t_getIdForPath(path: string[]): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_ELEMENT}/path`, { path });\r\n\t}\r\n\r\n\t_getCategorys(options: SearchElementOptions): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_CATEGORY}`, options);\r\n\t}\r\n\r\n\t_getElements(options: SearchElementOptions): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_ELEMENT}`, options);\r\n\t}\r\n\r\n\t_createCategory(parentId: string, category: ArchivementCategory): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_CATEGORY}/create`, { ...category, _parentId: parentId } );\r\n\t}\r\n\r\n\t_createElement(categoryId: string, element: Archivement): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_ELEMENT}/create`, { ...element, _categoryId: categoryId } );\r\n\t}\r\n\r\n\t_updateCategory(categoryId: string, category: ArchivementCategory): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_CATEGORY}/update`, { ...category, _id: categoryId });\r\n\t}\r\n\r\n\t_updateElement(elementId: string, element: Archivement): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_ELEMENT}/update`, {  ...element, _id: elementId });\r\n\t}\r\n\r\n\t_deleteCategory(categoryId: string): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_CATEGORY}/delete`, { _id: categoryId });\r\n\t}\r\n\r\n\t_deleteElement(elementId: string): Observable<Response> {\r\n\t\treturn this.httpClient.post<Response>(`${ApiService.DOMAIN}/${ArchivementService.ROUTE_ELEMENT}/delete`, { _id: elementId });\r\n\t}\r\n}"]}