{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","component","_shell_layout_layout_component__WEBPACK_IMPORTED_MODULE_0__","children","loadChildren","Promise","then","child","DashboardModule","__webpack_require__","EventRoutingModule","ArchivementRoutingModule","ItemModule","LoginRoutingModule","PageNotFoundModule","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","relativeLinkResolution","imports","exports","AppComponent","router","themeService","events","subscribe","event","_angular_router__WEBPACK_IMPORTED_MODULE_1__","gtag","urlAfterRedirects","loadStyle","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selectors","decls","vars","template","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","provide","_angular_common_http__WEBPACK_IMPORTED_MODULE_5__","useClass","_service_httprequest_interceptor__WEBPACK_IMPORTED_MODULE_2__","multi","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_select__WEBPACK_IMPORTED_MODULE_8__","_shell_shell_module__WEBPACK_IMPORTED_MODULE_3__","ngx_markdown__WEBPACK_IMPORTED_MODULE_9__","loader","declarations","ApiService","DOMAIN","factory","providedIn","AuthService","httpClient","applicationRef","post","_api_api_service__WEBPACK_IMPORTED_MODULE_0__","setLoggedIn","response","loggedin","editing","localStorage","getItem","setEditing","setItem","tick","isLoggedIn","isInEditing","email","password","done","name","confirmPassword","isEditing","_angular_core__WEBPACK_IMPORTED_MODULE_1__","HttpRequestInterceptor","request","next","req","clone","withCredentials","handle","MenuIndexs","MenuService","menuIndex","options","elements","menus","undefined","length","elementIndex","index","menu","themes","className","ThemeService","defaultTheme","theme","document","body","classList","value","background","setCurrentTheme","getThemeByClassName","window","setMatBackground","matBackground","updateTheme","toLowerCase","FooterComponent","consts","_angular_core__WEBPACK_IMPORTED_MODULE_0__","DialogThemeSelectComponent","dialogRef","src_app_service_theme_service__WEBPACK_IMPORTED_MODULE_0__","selected","currentTheme","rollbackTheme","rollbackBackground","checked","close","inputs","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_4__","menu_r1","element_r20","HeaderComponent","authService","menuService","snackbar","dialog","setMenu","_service_menu_menu_service__WEBPACK_IMPORTED_MODULE_0__","routerLink","icon","addElement","click","dialogTheme","open","_dialog_theme_select_dialog_theme_select_component__WEBPACK_IMPORTED_MODULE_1__","componentInstance","bind","duration","hidden","logout","LayoutComponent","ShellModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_6__","_angular_material_button__WEBPACK_IMPORTED_MODULE_7__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_8__","_angular_material_input__WEBPACK_IMPORTED_MODULE_9__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_11__","_angular_material_tabs__WEBPACK_IMPORTED_MODULE_12__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_13__","_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_14__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__","_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_16__","_angular_material_select__WEBPACK_IMPORTED_MODULE_17__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_18__","_angular_forms__WEBPACK_IMPORTED_MODULE_19__","_angular_router__WEBPACK_IMPORTED_MODULE_20__","_layout_layout_component__WEBPACK_IMPORTED_MODULE_0__","_header_header_component__WEBPACK_IMPORTED_MODULE_1__","_footer_footer_component__WEBPACK_IMPORTED_MODULE_2__","_header_dialog_theme_select_dialog_theme_select_component__WEBPACK_IMPORTED_MODULE_3__","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","error","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/api/api.service.ts","webpack:///src/app/service/auth/auth.service.ts","webpack:///src/app/service/httprequest.interceptor.ts","webpack:///src/app/service/menu/menu.service.ts","webpack:///src/app/service/theme.service.ts","webpack:///src/app/shell/footer/footer.component.ts","webpack:///src/app/shell/footer/footer.component.html","webpack:///src/app/shell/header/dialog-theme-select/dialog-theme-select.component.html","webpack:///src/app/shell/header/dialog-theme-select/dialog-theme-select.component.ts","webpack:///src/app/shell/header/header.component.html","webpack:///src/app/shell/header/header.component.ts","webpack:///src/app/shell/layout/layout.component.ts","webpack:///src/app/shell/layout/layout.component.html","webpack:///src/app/shell/shell.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutComponent } from './shell/layout/layout.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                loadChildren: () => import('./dashboard/dashboard.module').then(child => child.DashboardModule)\r\n            },\r\n            {\r\n                path: 'event',\r\n                loadChildren: () => import('./components/event/event-routing.module').then(child => child.EventRoutingModule)\r\n            },\r\n            {\r\n                path: 'archivement',\r\n                loadChildren: () => import('./components/archivement/archivement-routing.module').then(child => child.ArchivementRoutingModule)\r\n            },\r\n            {\r\n                path: 'item',\r\n                loadChildren: () => import('./item/item.module').then(child => child.ItemModule)\r\n            },\r\n            {\r\n                path: 'login',\r\n                loadChildren: () => import('./components/login/login-routing.module').then(child => child.LoginRoutingModule)\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '**',\r\n        loadChildren: () => import('./components/page-not-found/page-not-found.module').then(child => child.PageNotFoundModule)\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { ThemeService } from './service/theme.service';\r\ndeclare let gtag: any;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private themeService: ThemeService\r\n    ) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        gtag('set', 'page', event.urlAfterRedirects);\r\n        gtag('send', 'pageview');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.themeService.loadStyle();\r\n  }\r\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpRequestInterceptor } from './service/httprequest.interceptor';\r\nimport { ShellModule } from './shell/shell.module';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatSelectModule,\r\n    ShellModule,\r\n    MarkdownModule,\r\n    MarkdownModule.forRoot({ loader: HttpClient })\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public static readonly DOMAIN: string = 'https://api.cv.wuffy.eu';\n\n  public static readonly postAccountLogout: string = `${ApiService.DOMAIN}/account/logout`;\n  public static readonly postAccountLogoutCheck: string = `${ApiService.DOMAIN}/account/logout/check`;\n  public static readonly postAccountLogin: string = `${ApiService.DOMAIN}/account/login`;\n  public static readonly postAccountCreate: string = `${ApiService.DOMAIN}/account/create`;\n  public static readonly postAccountUpdate: string = `${ApiService.DOMAIN}/account/update`;\n  public static readonly postAccountPassword: string = `${ApiService.DOMAIN}/account/update/password`;\n  public static readonly postAccountDelete: string = `${ApiService.DOMAIN}/account/delete`;\n\n  public static readonly postSettingEvent: string = `${ApiService.DOMAIN}/setting/event`;\n  public static readonly postSettingEventUpdate: string = `${ApiService.DOMAIN}/setting/event/update`;\n  public static readonly postSettingEventDelete: string = `${ApiService.DOMAIN}/setting/event/delete`;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\n\ninterface ILoginResponse {\n  loggedin: boolean;\n  errors: { msg: string }[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private static loggedin: boolean = false;\n  private static isEditing: boolean = false;\n\n  private static isLoggedIn() {\n    return AuthService.loggedin;\n  }\n\n  private static setLoggedIn(loggedin: boolean) {\n    AuthService.loggedin = loggedin;\n  }\n\n  private static isInEditing() {\n    return AuthService.isEditing;\n  }\n\n  private static setEditing(editing: boolean) {\n    AuthService.isEditing = editing;\n  }\n\n  constructor(\n    private httpClient: HttpClient,\n    private applicationRef: ApplicationRef\n  ) {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountLogoutCheck, {}).subscribe(response => {\n      this.setLoggedIn(response.loggedin);\n    });\n    const editing = localStorage.getItem('editing');\n    this.setEditing(editing && editing == 'true' ? true : false);\n  }\n\n  setEditing(editing: boolean) {\n    localStorage.setItem('editing', `${editing}`);\n    AuthService.setEditing(editing);\n    this.applicationRef.tick();\n  }\n\n  isInEditing(): boolean {\n    return AuthService.isLoggedIn() && AuthService.isInEditing();\n  }\n\n  private setLoggedIn(loggedin: boolean) {\n    AuthService.setLoggedIn(loggedin);\n    this.applicationRef.tick();\n  }\n\n  isLoggedIn(): boolean {\n    return AuthService.isLoggedIn();\n  }\n\n  login(email: string, password: string, done: (result: ILoginResponse) => any) {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountLogin, { email, password }).subscribe(response => {\n      this.setLoggedIn(response.loggedin);\n      done(response);\n    });\n  }\n\n  create(name: string, email: string, password: string, confirmPassword: string, done: (result: ILoginResponse) => {}) {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountCreate, { name, email, password, confirmPassword }).subscribe(response => {\n      this.setLoggedIn(response.loggedin);\n      done(response);\n    });\n  }\n\n  logout() {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountLogout, {}).subscribe();\n    this.setLoggedIn(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const req = request.clone({\n      withCredentials: true\n    });\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport enum MenuIndexs {\n  ITEMS,\n  EVENTS,\n  ARCHIVEMENTS,\n  THEME,\n  SETTINGS\n}\n\nexport interface HeaderMenu extends MenuSetting {\n  elements?: HeaderMenuElement[];\n}\n\nexport interface HeaderMenuElement extends MenuSetting {\n  routerLink?: string;\n  click?(): void;\n}\n\nexport interface MenuSetting {\n  name: string;\n  hidden?: () => boolean;\n  icon?: string;\n  tooltip?: string;\n  class?: string;\n  routerLink?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  menus: HeaderMenu[] = [];\n\n  constructor() { }\n\n  setMenu(menuIndex: MenuIndexs, options: HeaderMenu) {\n    if (!options.elements) {\n      options.elements = [];\n    }\n    this.menus[menuIndex != undefined ? menuIndex : this.menus.length] = options;\n  }\n\n  addElement(menuIndex: MenuIndexs, options: HeaderMenuElement, elementIndex?: number) {\n    const index = menuIndex != undefined ? menuIndex : this.menus.length;\n    let menu: HeaderMenu = this.menus[index];\n    if (menu) {\n      const elements: HeaderMenuElement[] = menu.elements;\n      elements[elementIndex != undefined ? elementIndex : elements.length] = options;\n    }\n  }\n\n  getMenu(menuIndex: MenuIndexs): HeaderMenu {\n    return this.menus[menuIndex];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TooltipPosition } from '@angular/material/tooltip';\n\nexport interface Theme {\n  name: string;\n  className: string;\n  tooltip?: string;\n  tooltipPosition?: TooltipPosition;\n}\n\nexport let themes: Theme[] = [\n  {\n    name: 'Dark',\n    className: 'dark-theme'\n  },\n  {\n    name: 'Blue',\n    className: 'blue-theme'\n  },\n  {\n    name: 'Candy',\n    className: 'candy-theme'\n  },\n  {\n    name: 'CV',\n    className: 'cv-theme'\n  }\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  readonly defaultTheme = themes[3];\n  private theme: Theme = this.defaultTheme\n\n  private background: boolean = true;\n\n  constructor() { }\n\n  private updateTheme(theme: Theme) {\n    document.body.classList.value = `${this.background ? 'mat-app-background' : ''} ${theme.className}`;\n  }\n\n  loadStyle() {\n    this.setCurrentTheme(this.getThemeByClassName(window.localStorage.getItem('theme-name')));\n\n    const background = localStorage.getItem('theme-background');\n    this.setMatBackground(background && background == 'false' ? false : true);\n  }\n\n  toggleMatBackground() {\n    this.setMatBackground(!this.matBackground);\n  }\n  \n  get currentTheme(): Theme {\n    return this.theme;\n  }\n\n  setCurrentTheme(theme: Theme) {\n    this.theme = theme;\n    this.updateTheme(this.theme);\n    window.localStorage.setItem('theme-name', this.theme.className);\n  }\n\n  get matBackground(): boolean {\n    return this.background;\n  }\n\n  setMatBackground(background: boolean) {\n    this.background = background;\n    this.updateTheme(this.theme);\n    window.localStorage.setItem('theme-background', `${this.background}`);\n  }\n\n  getThemeByClassName(className: string): Theme {\n    if (!className) {\n      return this.defaultTheme;\n    }\n\n    className = className.toLowerCase();\n    for (let theme of themes) {\n      if (theme.className.toLowerCase() === className) {\n        return theme;\n      }\n    }\n    return this.defaultTheme;\n  }\n\n  getThemeByName(name: string): Theme {\n    if (!name) {\n      return this.defaultTheme;\n    }\n\n    name = name.toLowerCase();\n    for (let theme of themes) {\n      if (theme.name.toLowerCase() === name) {\n        return theme;\n      }\n    }\n    return this.defaultTheme;\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n\t<div class=\"element creator\">\n\t\tMade with <span class=\"material-icons love\">favorite</span> by NgLoader & Dragon0697\n\t</div>\n\t<div class=\"element craftventure\">\n\t\t<a href=\"https://CraftVenture.net\">\n\t\t\t<img src=\"https://cdn.discordapp.com/icons/134010176633176064/b35752275dfa605906a1680bc51fffd6.webp\"\n\t\t\t\talt=\"CraftVenture Logo\">\n\t\t\t<h1>CraftVenture</h1>\n\t\t</a>\n\t</div>\n\t<div class=\"element imprint\">\n\t\t<a href=\"https://wuffy.eu/impressum.html\">Imprint</a>\n\t</div>\n</mat-toolbar>","<h1 mat-dialog-title>Wähle ein design aus</h1>\n<div mat-dialog-content class=\"theme-select\">\n\t<mat-form-field>\n\t\t<mat-label>Desing</mat-label>\n\t\t<mat-select [(value)]=\"selected\" (selectionChange)=\"this.onSelectionChanged($event)\">\n\t\t\t<mat-option *ngFor=\"let theme of this.themes\" [value]=\"theme.className\">{{theme.name}}</mat-option>\n\t\t</mat-select>\n\t</mat-form-field>\n\t<mat-checkbox [checked]=\"this.themeService.matBackground\" (change)=\"this.onBackgroundChanged($event)\">Background</mat-checkbox>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCloseClick()\">Abbruch</button>\n  <button mat-button (click)=\"onApplyClick()\">Übernehmen</button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { Theme, themes, ThemeService } from 'src/app/service/theme.service';\n\n@Component({\n  selector: 'app-dialog-theme-select',\n  templateUrl: './dialog-theme-select.component.html',\n  styleUrls: ['./dialog-theme-select.component.css']\n})\nexport class DialogThemeSelectComponent implements OnInit {\n\n  @Input() themeService: ThemeService;\n\n  public themes = themes;\n  public selected: string;\n  public rollbackTheme: Theme;\n  public rollbackBackground: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogThemeSelectComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.selected = this.themeService.currentTheme.className;\n    this.rollbackTheme = this.themeService.currentTheme;\n    this.rollbackBackground = this.themeService.matBackground;\n  }\n\n  onSelectionChanged(event: MatSelectChange) {\n    this.themeService.setCurrentTheme(this.themeService.getThemeByClassName(event.value));\n  }\n\n  onBackgroundChanged(event: MatCheckboxChange) {\n    this.themeService.setMatBackground(event.checked);\n  }\n\n  onCloseClick() {\n    this.dialogRef.close();\n    this.themeService.setCurrentTheme(this.rollbackTheme);\n    this.themeService.setMatBackground(this.rollbackBackground);\n  }\n\n  onApplyClick() {\n    this.dialogRef.close();\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"header\">\n    <div class=\"title\" routerLink=\"/\">{{this.title}}</div>\n    <div class=\"spacer\"></div>\n    <div class=\"menu\">\n        <div *ngFor=\"let menu of this.menuService.menus\">\n            <div *ngIf=\"menu && !(menu.hidden && menu.hidden())\">\n                <div *ngIf=\"menu.routerLink != undefined\">\n                    <button mat-raised-button *ngIf=\"menu.icon == undefined\" [routerLink]=\"menu.routerLink\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <div>{{menu.name}}</div>\n                    </button>\n                    <button mat-icon-button *ngIf=\"menu.icon != undefined\" [routerLink]=\"menu.routerLink\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <mat-icon>{{menu.icon}}</mat-icon>\n                        <span *ngIf=\"menu.name != undefined\">{{menu.name}}</span>\n                    </button>\n                </div>\n                <div *ngIf=\"menu.routerLink == undefined\">\n                    <button mat-raised-button *ngIf=\"menu.icon == undefined\" [matMenuTriggerFor]=\"menuEvent\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <div>{{menu.name}}</div>\n                    </button>\n                    <button mat-icon-button *ngIf=\"menu.icon != undefined\" [matMenuTriggerFor]=\"menuEvent\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <mat-icon>{{menu.icon}}</mat-icon>\n                        <span *ngIf=\"menu.name != undefined\">{{menu.name}}</span>\n                    </button>\n                    <mat-menu #menuEvent=\"matMenu\">\n                        <div *ngFor='let element of menu.elements'>\n                            <button mat-menu-item *ngIf=\"element && !(element.hidden && element.hidden())\"\n                                [matTooltip]=\"element.tooltip\" matTooltipPosition=\"below\"\n                                [routerLink]=\"element.routerLink != undefined ? [element.routerLink] : []\"\n                                [class]=\"menu.class\" (click)='element.click != undefined && element.click()'>\n                                <mat-icon *ngIf=\"element.icon != undefined\">\n                                    <mat-icon>{{element.icon}}</mat-icon>\n                                    <span *ngIf=\"element.name != undefined\">{{element.name}}</span>\n                                </mat-icon>\n                                <div *ngIf=\"element.icon == undefined\">{{element.name}}</div>\n                            </button>\n                        </div>\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    </div>\n</mat-toolbar>","import { Location } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from 'src/app/service/auth/auth.service';\nimport { themes, ThemeService } from 'src/app/service/theme.service';\nimport { MenuIndexs, MenuService } from '../../service/menu/menu.service';\nimport { DialogThemeSelectComponent } from './dialog-theme-select/dialog-theme-select.component';\n\nexport interface DialogThemeSelectData { }\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  public title: string = \"Craftventure\";\n\n  constructor(\n    public authService: AuthService,\n    public menuService: MenuService,\n    public themeService: ThemeService,\n    private snackbar: MatSnackBar,\n    public dialog: MatDialog) {\n    this.menuService.setMenu(MenuIndexs.ITEMS, { name: 'Items', routerLink: \"/item\" });\n    this.menuService.setMenu(MenuIndexs.EVENTS, { name: 'Events', routerLink: \"/event\" });\n    this.menuService.setMenu(MenuIndexs.ARCHIVEMENTS, { name: 'Archivements', routerLink: \"/archivement\" });\n\n    this.menuService.setMenu(MenuIndexs.SETTINGS, {\n      name: undefined,\n      icon: 'settings',\n      class: 'rotateIcon'\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Theme',\n      click: (() => {\n         const dialogTheme = this.dialog.open(DialogThemeSelectComponent);\n         dialogTheme.componentInstance.themeService = this.themeService;\n      }).bind(this)\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Toggle Editor',\n      click: (() => {\n        this.authService.setEditing(!this.authService.isInEditing());\n        this.snackbar.open(`Editormode ${this.authService.isInEditing() ? 'on' : 'off'}`, 'Close', {\n          duration: 5000\n        });\n      }).bind(this),\n      hidden: () => { return !this.authService.isLoggedIn() }\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Admin',\n      routerLink: '/admin',\n      hidden: () => { return !this.authService.isLoggedIn() }\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Logout',\n      click: (() => {\n        this.authService.logout();\n      }).bind(this),\n      hidden: () => { return !this.authService.isLoggedIn() }\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Login',\n      routerLink: '/login',\n      hidden: () => { return this.authService.isLoggedIn() }\n    });\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../../service/menu/menu.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}","<app-header></app-header>\n<router-outlet></router-outlet>\n<div class=\"spacer\"></div>\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from './layout/layout.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { DialogThemeSelectComponent } from './header/dialog-theme-select/dialog-theme-select.component';\n\n@NgModule({\n  declarations: [ LayoutComponent, HeaderComponent, FooterComponent, DialogThemeSelectComponent ],\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    FormsModule,\n    RouterModule\n  ],\n  exports: [ LayoutComponent ]\n})\nexport class ShellModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}