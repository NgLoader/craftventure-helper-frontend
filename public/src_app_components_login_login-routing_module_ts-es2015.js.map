{"version":3,"file":"src_app_components_login_login-routing_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;AAOO,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;8GAAhB,gBAAgB;QCP7B,yEAAqB;QACpB,oEAAyB;QACzB,oEAAyB;QACzB,oEAAyB;QACzB,oEAAyB;QACzB,oEAAyB;QAC1B,4DAAM;;;;;;;;;;;;;;;;;;;ACLiD;AAEJ;;;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAc;KAC1B;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHpB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEdxB,iEAA+D;;;IAI5D,yEAA0D;IACzD,oFAAoC;IACnC,4EAAW;IAAA,gEAAK;IAAA,4DAAY;IAC5B,0EAAoD;IACrD,4DAAiB;IACjB,oFAAoC;IACnC,4EAAW;IAAA,mEAAQ;IAAA,4DAAY;IAC/B,2EAA8D;IAC/D,4DAAiB;IAClB,4DAAM;;;IACN,qEAAyB;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,+EAAgB;;;;IAExC,6EAAiF;IAAvB,mUAAsB;IAC/E,kEACD;IAAA,4DAAS;;;;IACT,6EAAkF;IAAxB,oUAAuB;IAChF,mEACD;IAAA,4DAAS;;;IAlBZ,yEAAmB;IACjB,yHASM;IACN,sHAA8C;IAC9C,sEAAK;IACJ,8HAES;IACT,8HAES;IACV,4DAAM;IACR,4DAAM;;;IAnBgB,0DAAoC;IAApC,kGAAoC;IAUnD,0DAAkB;IAAlB,gFAAkB;IAEF,0DAAoC;IAApC,kGAAoC;IAGnC,0DAAmC;IAAnC,iGAAmC;;;IAQ3D,yEAA2B;;ADlBrB,MAAM,cAAc;IAQzB,YACS,WAAwB,EACvB,MAAc;QADf,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QALxB,YAAO,GAAG,KAAK,CAAC;IAMZ,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,EAAE;YACnG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5B,OAAO;aACR;YAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC;QACnF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;IAC/B,CAAC;;4EAhCU,cAAc;4GAAd,cAAc;;;;;;;;QCT3B,0GAA+D;QAE/D,sMAsBc;QAEd,sMAEc;;;;QA5BR,6EAAe","sources":["./src/app/components/layout/loading/loading.component.ts","./src/app/components/layout/loading/loading.component.html","./src/app/components/login/login-routing.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner\">\n\t<div class=\"rect1\"></div>\n\t<div class=\"rect2\"></div>\n\t<div class=\"rect3\"></div>\n\t<div class=\"rect4\"></div>\n\t<div class=\"rect5\"></div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/service/auth/auth.guard';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('email') public email: ElementRef<HTMLInputElement>;\n  @ViewChild('password') public password: ElementRef<HTMLInputElement>;\n\n  loading = false;\n  message: string;\n\n  constructor(\n    public authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.loading = true;\n    this.authService.login(this.email.nativeElement.value, this.password.nativeElement.value, (result) => {\n      this.loading = false;\n      if (result.loggedin) {\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.message = result.errors.length > 0 ? result.errors[0].msg : 'Unknown error';\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.message = \"Logged out!\";\n  }\n}","<div *ngIf=\"loading; then loadingBlock; else loginBlock\"></div>\n\n<ng-template #loginBlock>\n\t<div class=\"login\">\n\t\t\t<div class=\"input\" *ngIf=\"!this.authService.isLoggedIn()\">\n\t\t\t\t<mat-form-field class=\"input-field\">\n\t\t\t\t\t<mat-label>Email</mat-label>\n\t\t\t\t\t<input matInput #email type=\"text\" ng-model=\"email\">\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field class=\"input-field\">\n\t\t\t\t\t<mat-label>Password</mat-label>\n\t\t\t\t\t<input matInput #password type=\"password\" ng-model=\"password\">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t\t<h1 *ngIf=\"this.message\">{{this.message}}</h1>\n\t\t\t<div>\n\t\t\t\t<button mat-button *ngIf=\"!this.authService.isLoggedIn()\" (click)=\"this.login()\">\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t\t<button mat-button  *ngIf=\"this.authService.isLoggedIn()\" (click)=\"this.logout()\">\n\t\t\t\t\tLogout\n\t\t\t\t</button>\n\t\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #loadingBlock>\n\t<app-loading></app-loading>\n</ng-template>"],"names":[],"sourceRoot":"webpack:///"}