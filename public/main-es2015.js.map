{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/api/api.service.ts","./src/app/service/auth/auth.service.ts","./src/app/service/httprequest.interceptor.ts","./src/app/service/menu/menu.service.ts","./src/app/service/theme.service.ts","./src/app/shell/footer/footer.component.ts","./src/app/shell/footer/footer.component.html","./src/app/shell/header/dialog-theme-select/dialog-theme-select.component.ts","./src/app/shell/header/dialog-theme-select/dialog-theme-select.component.html","./src/app/shell/header/header.component.ts","./src/app/shell/header/header.component.html","./src/app/shell/layout/layout.component.ts","./src/app/shell/layout/layout.component.html","./src/app/shell/shell.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutComponent } from './shell/layout/layout.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                loadChildren: () => import('./dashboard/dashboard.module').then(child => child.DashboardModule)\r\n            },\r\n            {\r\n                path: 'event',\r\n                loadChildren: () => import('./components/event/event-routing.module').then(child => child.EventRoutingModule)\r\n            },\r\n            {\r\n                path: 'archivement',\r\n                loadChildren: () => import('./components/archivement/archivement-routing.module').then(child => child.ArchivementRoutingModule)\r\n            },\r\n            {\r\n                path: 'item',\r\n                loadChildren: () => import('./item/item.module').then(child => child.ItemModule)\r\n            },\r\n            {\r\n                path: 'login',\r\n                loadChildren: () => import('./components/login/login-routing.module').then(child => child.LoginRoutingModule)\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '**',\r\n        loadChildren: () => import('./components/page-not-found/page-not-found.module').then(child => child.PageNotFoundModule)\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { ThemeService } from './service/theme.service';\r\ndeclare let gtag: any;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private themeService: ThemeService\r\n    ) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        gtag('set', 'page', event.urlAfterRedirects);\r\n        gtag('send', 'pageview');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.themeService.loadStyle();\r\n  }\r\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpRequestInterceptor } from './service/httprequest.interceptor';\r\nimport { ShellModule } from './shell/shell.module';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatSelectModule,\r\n    ShellModule,\r\n    MarkdownModule,\r\n    MarkdownModule.forRoot({ loader: HttpClient })\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public static readonly DOMAIN: string = 'https://api.cv.wuffy.eu';\n\n  public static readonly postAccountLogout: string = `${ApiService.DOMAIN}/account/logout`;\n  public static readonly postAccountLogoutCheck: string = `${ApiService.DOMAIN}/account/logout/check`;\n  public static readonly postAccountLogin: string = `${ApiService.DOMAIN}/account/login`;\n  public static readonly postAccountCreate: string = `${ApiService.DOMAIN}/account/create`;\n  public static readonly postAccountUpdate: string = `${ApiService.DOMAIN}/account/update`;\n  public static readonly postAccountPassword: string = `${ApiService.DOMAIN}/account/update/password`;\n  public static readonly postAccountDelete: string = `${ApiService.DOMAIN}/account/delete`;\n\n  public static readonly postSettingEvent: string = `${ApiService.DOMAIN}/setting/event`;\n  public static readonly postSettingEventUpdate: string = `${ApiService.DOMAIN}/setting/event/update`;\n  public static readonly postSettingEventDelete: string = `${ApiService.DOMAIN}/setting/event/delete`;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\n\ninterface ILoginResponse {\n  loggedin: boolean;\n  errors: { msg: string }[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private static loggedin: boolean = false;\n  private static isEditing: boolean = false;\n\n  private static isLoggedIn() {\n    return AuthService.loggedin;\n  }\n\n  private static setLoggedIn(loggedin: boolean) {\n    AuthService.loggedin = loggedin;\n  }\n\n  private static isInEditing() {\n    return AuthService.isEditing;\n  }\n\n  private static setEditing(editing: boolean) {\n    AuthService.isEditing = editing;\n  }\n\n  constructor(\n    private httpClient: HttpClient,\n    private applicationRef: ApplicationRef\n  ) {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountLogoutCheck, {}).subscribe(response => {\n      this.setLoggedIn(response.loggedin);\n    });\n    const editing = localStorage.getItem('editing');\n    this.setEditing(editing && editing == 'true' ? true : false);\n  }\n\n  setEditing(editing: boolean) {\n    localStorage.setItem('editing', `${editing}`);\n    AuthService.setEditing(editing);\n    this.applicationRef.tick();\n  }\n\n  isInEditing(): boolean {\n    return AuthService.isLoggedIn() && AuthService.isInEditing();\n  }\n\n  private setLoggedIn(loggedin: boolean) {\n    AuthService.setLoggedIn(loggedin);\n    this.applicationRef.tick();\n  }\n\n  isLoggedIn(): boolean {\n    return AuthService.isLoggedIn();\n  }\n\n  login(email: string, password: string, done: (result: ILoginResponse) => any) {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountLogin, { email, password }).subscribe(response => {\n      this.setLoggedIn(response.loggedin);\n      done(response);\n    });\n  }\n\n  create(name: string, email: string, password: string, confirmPassword: string, done: (result: ILoginResponse) => {}) {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountCreate, { name, email, password, confirmPassword }).subscribe(response => {\n      this.setLoggedIn(response.loggedin);\n      done(response);\n    });\n  }\n\n  logout() {\n    this.httpClient.post<ILoginResponse>(ApiService.postAccountLogout, {}).subscribe();\n    this.setLoggedIn(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const req = request.clone({\n      withCredentials: true\n    });\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport enum MenuIndexs {\n  ITEMS,\n  EVENTS,\n  ARCHIVEMENTS,\n  THEME,\n  SETTINGS\n}\n\nexport interface HeaderMenu extends MenuSetting {\n  elements?: HeaderMenuElement[];\n}\n\nexport interface HeaderMenuElement extends MenuSetting {\n  routerLink?: string;\n  click?(): void;\n}\n\nexport interface MenuSetting {\n  name: string;\n  hidden?: () => boolean;\n  icon?: string;\n  tooltip?: string;\n  class?: string;\n  routerLink?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  menus: HeaderMenu[] = [];\n\n  constructor() { }\n\n  setMenu(menuIndex: MenuIndexs, options: HeaderMenu) {\n    if (!options.elements) {\n      options.elements = [];\n    }\n    this.menus[menuIndex != undefined ? menuIndex : this.menus.length] = options;\n  }\n\n  addElement(menuIndex: MenuIndexs, options: HeaderMenuElement, elementIndex?: number) {\n    const index = menuIndex != undefined ? menuIndex : this.menus.length;\n    let menu: HeaderMenu = this.menus[index];\n    if (menu) {\n      const elements: HeaderMenuElement[] = menu.elements;\n      elements[elementIndex != undefined ? elementIndex : elements.length] = options;\n    }\n  }\n\n  getMenu(menuIndex: MenuIndexs): HeaderMenu {\n    return this.menus[menuIndex];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TooltipPosition } from '@angular/material/tooltip';\n\nexport interface Theme {\n  name: string;\n  className: string;\n  tooltip?: string;\n  tooltipPosition?: TooltipPosition;\n}\n\nexport let themes: Theme[] = [\n  {\n    name: 'Dark',\n    className: 'dark-theme'\n  },\n  {\n    name: 'Blue',\n    className: 'blue-theme'\n  },\n  {\n    name: 'Candy',\n    className: 'candy-theme'\n  },\n  {\n    name: 'CV',\n    className: 'cv-theme'\n  }\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  readonly defaultTheme = themes[3];\n  private theme: Theme = this.defaultTheme\n\n  private background: boolean = true;\n\n  constructor() { }\n\n  private updateTheme(theme: Theme) {\n    document.body.classList.value = `${this.background ? 'mat-app-background' : ''} ${theme.className}`;\n  }\n\n  loadStyle() {\n    this.setCurrentTheme(this.getThemeByClassName(window.localStorage.getItem('theme-name')));\n\n    const background = localStorage.getItem('theme-background');\n    this.setMatBackground(background && background == 'false' ? false : true);\n  }\n\n  toggleMatBackground() {\n    this.setMatBackground(!this.matBackground);\n  }\n  \n  get currentTheme(): Theme {\n    return this.theme;\n  }\n\n  setCurrentTheme(theme: Theme) {\n    this.theme = theme;\n    this.updateTheme(this.theme);\n    window.localStorage.setItem('theme-name', this.theme.className);\n  }\n\n  get matBackground(): boolean {\n    return this.background;\n  }\n\n  setMatBackground(background: boolean) {\n    this.background = background;\n    this.updateTheme(this.theme);\n    window.localStorage.setItem('theme-background', `${this.background}`);\n  }\n\n  getThemeByClassName(className: string): Theme {\n    if (!className) {\n      return this.defaultTheme;\n    }\n\n    className = className.toLowerCase();\n    for (let theme of themes) {\n      if (theme.className.toLowerCase() === className) {\n        return theme;\n      }\n    }\n    return this.defaultTheme;\n  }\n\n  getThemeByName(name: string): Theme {\n    if (!name) {\n      return this.defaultTheme;\n    }\n\n    name = name.toLowerCase();\n    for (let theme of themes) {\n      if (theme.name.toLowerCase() === name) {\n        return theme;\n      }\n    }\n    return this.defaultTheme;\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n\t<div class=\"element creator\">\n\t\tMade with <span class=\"material-icons love\">favorite</span> by NgLoader & Dragon0697\n\t</div>\n\t<div class=\"element craftventure\">\n\t\t<a href=\"https://CraftVenture.net\">\n\t\t\t<img src=\"https://cdn.discordapp.com/icons/134010176633176064/b35752275dfa605906a1680bc51fffd6.webp\"\n\t\t\t\talt=\"CraftVenture Logo\">\n\t\t\t<h1>CraftVenture</h1>\n\t\t</a>\n\t</div>\n\t<div class=\"element imprint\">\n\t\t<a href=\"https://wuffy.eu/impressum.html\">Imprint</a>\n\t</div>\n</mat-toolbar>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { Theme, themes, ThemeService } from 'src/app/service/theme.service';\n\n@Component({\n  selector: 'app-dialog-theme-select',\n  templateUrl: './dialog-theme-select.component.html',\n  styleUrls: ['./dialog-theme-select.component.css']\n})\nexport class DialogThemeSelectComponent implements OnInit {\n\n  @Input() themeService: ThemeService;\n\n  public themes = themes;\n  public selected: string;\n  public rollbackTheme: Theme;\n  public rollbackBackground: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogThemeSelectComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.selected = this.themeService.currentTheme.className;\n    this.rollbackTheme = this.themeService.currentTheme;\n    this.rollbackBackground = this.themeService.matBackground;\n  }\n\n  onSelectionChanged(event: MatSelectChange) {\n    this.themeService.setCurrentTheme(this.themeService.getThemeByClassName(event.value));\n  }\n\n  onBackgroundChanged(event: MatCheckboxChange) {\n    this.themeService.setMatBackground(event.checked);\n  }\n\n  onCloseClick() {\n    this.dialogRef.close();\n    this.themeService.setCurrentTheme(this.rollbackTheme);\n    this.themeService.setMatBackground(this.rollbackBackground);\n  }\n\n  onApplyClick() {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Wähle ein design aus</h1>\n<div mat-dialog-content class=\"theme-select\">\n\t<mat-form-field>\n\t\t<mat-label>Desing</mat-label>\n\t\t<mat-select [(value)]=\"selected\" (selectionChange)=\"this.onSelectionChanged($event)\">\n\t\t\t<mat-option *ngFor=\"let theme of this.themes\" [value]=\"theme.className\">{{theme.name}}</mat-option>\n\t\t</mat-select>\n\t</mat-form-field>\n\t<mat-checkbox [checked]=\"this.themeService.matBackground\" (change)=\"this.onBackgroundChanged($event)\">Background</mat-checkbox>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCloseClick()\">Abbruch</button>\n  <button mat-button (click)=\"onApplyClick()\">Übernehmen</button>\n</div>","import { Location } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from 'src/app/service/auth/auth.service';\nimport { themes, ThemeService } from 'src/app/service/theme.service';\nimport { MenuIndexs, MenuService } from '../../service/menu/menu.service';\nimport { DialogThemeSelectComponent } from './dialog-theme-select/dialog-theme-select.component';\n\nexport interface DialogThemeSelectData { }\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  public title: string = \"Craftventure\";\n\n  constructor(\n    public authService: AuthService,\n    public menuService: MenuService,\n    public themeService: ThemeService,\n    private snackbar: MatSnackBar,\n    public dialog: MatDialog) {\n    this.menuService.setMenu(MenuIndexs.ITEMS, { name: 'Items', routerLink: \"/item\" });\n    this.menuService.setMenu(MenuIndexs.EVENTS, { name: 'Events', routerLink: \"/event\" });\n    this.menuService.setMenu(MenuIndexs.ARCHIVEMENTS, { name: 'Archivements', routerLink: \"/archivement\" });\n\n    this.menuService.setMenu(MenuIndexs.SETTINGS, {\n      name: undefined,\n      icon: 'settings',\n      class: 'rotateIcon'\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Theme',\n      click: (() => {\n         const dialogTheme = this.dialog.open(DialogThemeSelectComponent);\n         dialogTheme.componentInstance.themeService = this.themeService;\n      }).bind(this)\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Toggle Editor',\n      click: (() => {\n        this.authService.setEditing(!this.authService.isInEditing());\n        this.snackbar.open(`Editormode ${this.authService.isInEditing() ? 'on' : 'off'}`, 'Close', {\n          duration: 5000\n        });\n      }).bind(this),\n      hidden: () => { return !this.authService.isLoggedIn() }\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Admin',\n      routerLink: '/admin',\n      hidden: () => { return !this.authService.isLoggedIn() }\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Logout',\n      click: (() => {\n        this.authService.logout();\n      }).bind(this),\n      hidden: () => { return !this.authService.isLoggedIn() }\n    });\n    this.menuService.addElement(MenuIndexs.SETTINGS, {\n      name: 'Login',\n      routerLink: '/login',\n      hidden: () => { return this.authService.isLoggedIn() }\n    });\n  }\n}","<mat-toolbar color=\"primary\" class=\"header\">\n    <div class=\"title\" routerLink=\"/\">{{this.title}}</div>\n    <div class=\"spacer\"></div>\n    <div class=\"menu\">\n        <div *ngFor=\"let menu of this.menuService.menus\">\n            <div *ngIf=\"menu && !(menu.hidden && menu.hidden())\">\n                <div *ngIf=\"menu.routerLink != undefined\">\n                    <button mat-raised-button *ngIf=\"menu.icon == undefined\" [routerLink]=\"menu.routerLink\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <div>{{menu.name}}</div>\n                    </button>\n                    <button mat-icon-button *ngIf=\"menu.icon != undefined\" [routerLink]=\"menu.routerLink\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <mat-icon>{{menu.icon}}</mat-icon>\n                        <span *ngIf=\"menu.name != undefined\">{{menu.name}}</span>\n                    </button>\n                </div>\n                <div *ngIf=\"menu.routerLink == undefined\">\n                    <button mat-raised-button *ngIf=\"menu.icon == undefined\" [matMenuTriggerFor]=\"menuEvent\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <div>{{menu.name}}</div>\n                    </button>\n                    <button mat-icon-button *ngIf=\"menu.icon != undefined\" [matMenuTriggerFor]=\"menuEvent\"\n                        [matTooltip]=\"menu.tooltip\" [class]=\"menu.class\" color=\"second\" matTooltipPosition=\"below\">\n                        <mat-icon>{{menu.icon}}</mat-icon>\n                        <span *ngIf=\"menu.name != undefined\">{{menu.name}}</span>\n                    </button>\n                    <mat-menu #menuEvent=\"matMenu\">\n                        <div *ngFor='let element of menu.elements'>\n                            <button mat-menu-item *ngIf=\"element && !(element.hidden && element.hidden())\"\n                                [matTooltip]=\"element.tooltip\" matTooltipPosition=\"below\"\n                                [routerLink]=\"element.routerLink != undefined ? [element.routerLink] : []\"\n                                [class]=\"menu.class\" (click)='element.click != undefined && element.click()'>\n                                <mat-icon *ngIf=\"element.icon != undefined\">\n                                    <mat-icon>{{element.icon}}</mat-icon>\n                                    <span *ngIf=\"element.name != undefined\">{{element.name}}</span>\n                                </mat-icon>\n                                <div *ngIf=\"element.icon == undefined\">{{element.name}}</div>\n                            </button>\n                        </div>\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../../service/menu/menu.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}","<app-header></app-header>\n<router-outlet></router-outlet>\n<div class=\"spacer\"></div>\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from './layout/layout.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { DialogThemeSelectComponent } from './header/dialog-theme-select/dialog-theme-select.component';\n\n@NgModule({\n  declarations: [ LayoutComponent, HeaderComponent, FooterComponent, DialogThemeSelectComponent ],\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    FormsModule,\n    RouterModule\n  ],\n  exports: [ LayoutComponent ]\n})\nexport class ShellModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}