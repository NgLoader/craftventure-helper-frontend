{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOaA;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAgB;;;cAAhBA;AAAgBC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACP7BC;;AACCA;;AACAA;;AACAA;;AACAA;;AACAA;;AACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC;AAFb,OADqB,CAAvB;;UAWaC;;;;;yBAAAA;AAAkB;;;cAAlBA;;;kBAHF,CAACC,mEAAsBL,MAAtB,CAAD,GACCK;;;;4HAECD,qBAAkB;AAAAE;AAAAC,oBAFnBF,yDAEmB;AAAA;AAFP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdxBG;;;;;;AAIGA;;AACCA;;AACCA;;AAAWA;;AAAKA;;AAChBA;;AACDA;;AACAA;;AACCA;;AAAWA;;AAAQA;;AACnBA;;AACDA;;AACDA;;;;;;AACAA;;AAAyBA;;AAAgBA;;;;;;AAAhBA;;AAAAA;;;;;;;;AAExBA;;AAA0DA;AAAAA;;AAAA;;AAAA;AAAA;;AACzDA;;AACDA;;;;;;;;AACAA;;AAA0DA;AAAAA;;AAAA;;AAAA;AAAA;;AACzDA;;AACDA;;;;;;AAlBHA;;AACEA;;AAUAA;;AACAA;;AACCA;;AAGAA;;AAGDA;;AACFA;;;;;;AAnBsBA;;AAAAA;;AAUfA;;AAAAA;;AAEgBA;;AAAAA;;AAGCA;;AAAAA;;;;;;AAQxBA;;;;UClBYC;AAQX,iCACSC,WADT,EAEUC,MAFV,EAEwB;AAAA;;AADf;AACC;AALV,yBAAU,KAAV;AAMK;;;;iBAEL,oBAAQ,CACP;;;iBAED,iBAAK;AAAA;;AACH,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKF,WAAL,CAAiBG,KAAjB,CAAuB,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,KAAhD,EAAuD,KAAKC,QAAL,CAAcF,aAAd,CAA4BC,KAAnF,EAA0F,UAACE,MAAD,EAAW;AACnG,mBAAI,CAACN,OAAL,GAAe,KAAf;;AACA,kBAAIM,MAAM,CAACC,QAAX,EAAqB;AACnB,qBAAI,CAACR,MAAL,CAAYS,QAAZ,CAAqB,CAAC,GAAD,CAArB;;AACA;AACD;;AAED,mBAAI,CAACC,OAAL,GAAeH,MAAM,CAACI,MAAP,CAAcC,MAAd,GAAuB,CAAvB,GAA2BL,MAAM,CAACI,MAAP,CAAc,CAAd,EAAiBE,GAA5C,GAAkD,eAAjE;AACD,aARD;AASD;;;iBAED,kBAAM;AACJ,iBAAKd,WAAL,CAAiBe,MAAjB;AACA,iBAAKJ,OAAL,GAAe,aAAf;AACD;;;;;;;yBAhCUZ,iBAAcD;AAAA;;;cAAdC;AAAcf;AAAAgC;AAAA;;;;;;;;;;;;;;;;;;ADT3BlB;;AAEAA;;AAwBAA;;;;;;;;AA1BMA,0FAAe,UAAf,EAAemB,GAAf,EAAe,UAAf,EAAeC,GAAf;;;;;;;;","names":["LoadingComponent","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_login_component__WEBPACK_IMPORTED_MODULE_0__","LoginRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_2__","LoginComponent","authService","router","loading","login","email","nativeElement","value","password","result","loggedin","navigate","message","errors","length","msg","logout","viewQuery","_r3","_r1"],"sources":["webpack:///src/app/components/layout/loading/loading.component.ts","webpack:///src/app/components/layout/loading/loading.component.html","webpack:///src/app/components/login/login-routing.module.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner\">\n\t<div class=\"rect1\"></div>\n\t<div class=\"rect2\"></div>\n\t<div class=\"rect3\"></div>\n\t<div class=\"rect4\"></div>\n\t<div class=\"rect5\"></div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/service/auth/auth.guard';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","<div *ngIf=\"loading; then loadingBlock; else loginBlock\"></div>\n\n<ng-template #loginBlock>\n\t<div class=\"login\">\n\t\t\t<div class=\"input\" *ngIf=\"!this.authService.isLoggedIn()\">\n\t\t\t\t<mat-form-field class=\"input-field\">\n\t\t\t\t\t<mat-label>Email</mat-label>\n\t\t\t\t\t<input matInput #email type=\"text\" ng-model=\"email\">\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field class=\"input-field\">\n\t\t\t\t\t<mat-label>Password</mat-label>\n\t\t\t\t\t<input matInput #password type=\"password\" ng-model=\"password\">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t\t<h1 *ngIf=\"this.message\">{{this.message}}</h1>\n\t\t\t<div>\n\t\t\t\t<button mat-button *ngIf=\"!this.authService.isLoggedIn()\" (click)=\"this.login()\">\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t\t<button mat-button  *ngIf=\"this.authService.isLoggedIn()\" (click)=\"this.logout()\">\n\t\t\t\t\tLogout\n\t\t\t\t</button>\n\t\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #loadingBlock>\n\t<app-loading></app-loading>\n</ng-template>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('email') public email: ElementRef<HTMLInputElement>;\n  @ViewChild('password') public password: ElementRef<HTMLInputElement>;\n\n  loading = false;\n  message: string;\n\n  constructor(\n    public authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.loading = true;\n    this.authService.login(this.email.nativeElement.value, this.password.nativeElement.value, (result) => {\n      this.loading = false;\n      if (result.loggedin) {\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.message = result.errors.length > 0 ? result.errors[0].msg : 'Unknown error';\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.message = \"Logged out!\";\n  }\n}"]}