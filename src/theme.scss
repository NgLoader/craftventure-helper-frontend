@use '~@angular/material' as mat;
@import "~@angular/material/theming";
@include mat.core();

@mixin backgroundFlow($top, $bottom) {
    background: $default;
    background: -moz-radial-gradient( 0% 100%, ellipse cover, rgba(104, 128, 138, 0.4) 10%, rgba(138, 114, 76, 0) 40%), -moz-linear-gradient(top, rgba(57, 173, 219, 0.25) 0%, rgba(42, 60, 87, 0.4) 100%), -moz-linear-gradient(-45deg, $top 0%, $bottom 100%);
    background: -webkit-radial-gradient( 0% 100%, ellipse cover, rgba(104, 128, 138, 0.4) 10%, rgba(138, 114, 76, 0) 40%), -webkit-linear-gradient(top, rgba(57, 173, 219, 0.25) 0%, rgba( 42, 60, 87, 0.4) 100%), -webkit-linear-gradient(-45deg, $top 0%, $bottom 100%);
    background: -o-radial-gradient( 0% 100%, ellipse cover, rgba(104, 128, 138, 0.4) 10%, rgba(138, 114, 76, 0) 40%), -o-linear-gradient(top, rgba(57, 173, 219, 0.25) 0%, rgba(42, 60, 87, 0.4) 100%), -o-linear-gradient(-45deg, $top 0%, $bottom 100%);
    background: -ms-radial-gradient( 0% 100%, ellipse cover, rgba(104, 128, 138, 0.4) 10%, rgba(138, 114, 76, 0) 40%), -ms-linear-gradient(top, rgba(57, 173, 219, 0.25) 0%, rgba(42, 60, 87, 0.4) 100%), -ms-linear-gradient(-45deg, $top 0%, $bottom 100%);
    background: -webkit-radial-gradient( 0% 100%, ellipse cover, rgba(104, 128, 138, 0.4) 10%, rgba(138, 114, 76, 0) 40%), linear-gradient( to bottom, rgba(57, 173, 219, 0.25) 0%, rgba(42, 60, 87, 0.4) 100%), linear-gradient(135deg, $top 0%, $bottom 100%);
}

@mixin background($background, $color) {
    background: $background;
    color: $color;

    .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {
        background-color: $background !important;
    }
}

@mixin applyColors($primary, $accent, $warn) {
    .footer {
        background-color: $primary;
    }
    .mat-card {
        background: $primary;
    }
    .spinner * {
        background: $primary;
    }
}

.blue-theme {
    $theme-primay: mat.define-palette(mat.$indigo-palette);
    $theme-accent: mat.define-palette(mat.$indigo-palette, A200, A100, A400);
    $theme-warn: mat.define-palette(mat.$red-palette);
    $theme: mat.define-dark-theme($theme-primay, $theme-accent, $theme-warn);

    @include mat.all-component-themes($theme);
    @include background(#273271, white);
    @include applyColors(mat.get-color-from-palette($theme-primay), mat.get-color-from-palette($theme-accent), mat.get-color-from-palette($theme-warn));
}

.candy-theme {
    $theme-primay: mat.define-palette(mat.$pink-palette, 700, 500, 900);
    $theme-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
    $theme-warn: mat.define-palette(mat.$red-palette);
    $theme: mat.define-dark-theme($theme-primay, $theme-accent, $theme-warn);

    @include mat.all-component-themes($theme);
    @include background (#7d133d, white);
    @include applyColors(mat.get-color-from-palette($theme-primay), mat.get-color-from-palette($theme-accent), mat.get-color-from-palette($theme-warn));
}

.cv-theme {
    $theme-primay: mat.define-palette(mat.$orange-palette, 500);
    $theme-accent: mat.define-palette(mat.$orange-palette, A200, A100, A400);
    $theme-warn: mat.define-palette(mat.$red-palette);
    $theme: mat.define-dark-theme($theme-primay, $theme-accent, $theme-warn);

    @include mat.all-component-themes($theme);
    @include background(#ad5700, white);
    @include applyColors(mat.get-color-from-palette($theme-primay), mat.get-color-from-palette($theme-accent), mat.get-color-from-palette($theme-warn));
}

.dark-theme {
    $theme-primay: mat.define-palette(mat.$gray-palette, 900);
    $theme-accent: mat.define-palette(mat.$gray-palette, 800);
    $theme-warn: mat.define-palette(mat.$red-palette);
    $theme: mat.define-dark-theme($theme-primay, $theme-accent, $theme-warn);

    .mat-form-field.mat-focused .mat-form-field-label {
        color: white !important;
    }
    .mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {
        color: white !important;
    }

    @include mat.all-component-themes($theme);
    @include background(mat.get-color-from-palette($theme-accent), white);
    @include applyColors(mat.get-color-from-palette($theme-primay), mat.get-color-from-palette($theme-accent), mat.get-color-from-palette($theme-warn));
}

.light-theme {
    $theme-primay: mat.define-palette(mat.$indigo-palette);
    $theme-accent: mat.define-palette(mat.$gray-palette, 50);
    $theme-warn: mat.define-palette(mat.$red-palette);
    $theme: mat.define-light-theme($theme-primay, $theme-accent, $theme-warn);

    @include mat.all-component-themes($theme);
    @include background(mat.get-color-from-palette($theme-accent), white);
    @include applyColors(mat.get-color-from-palette($theme-primay), mat.get-color-from-palette($theme-accent), mat.get-color-from-palette($theme-warn));
}